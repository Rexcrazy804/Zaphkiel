name: "Populate cachix cache"
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'npins/sources.json'
      - 'flake.lock'
      - 'pkgs/**'
      - 'nixosModules/server/caddy.nix'
jobs:
  populate-cache:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: fltr
      with:
        filters: |
          kurukurubar:
            - 'pkgs/kurukurubar.nix'
            - 'pkgs/quickshell.nix'
          xvim:
            - 'pkgs/nvim/**'
          shpool:
            - 'pkgs/shpool.nix'
          caddy:
            - 'nixosModules/server/caddy.nix'
          lockfile:
            - 'flake.lock'
          pins:
            - 'npins/sources.json'
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: cachix/cachix-action@v14
      with:
        name: rexielscarlet
        authToken: '${{ secrets.CACHIX_API_KEY }}'

    - name: build kurukurubar unstable
      if: steps.fltr.outputs.kurukurubar == 'true' || steps.fltr.outputs.lockfile == 'true'
      run: nix build .#kurukurubar-unstable

    - name: build xvim (neovim)
      if: steps.fltr.outputs.xvim == 'true' || steps.fltr.outputs.pins == 'true' || steps.fltr.outputs.lockfile == 'true'
      run: nix build .#xvim.default

    - name: build shpool
      if: steps.fltr.outputs.shpool == 'true' || steps.fltr.outputs.pins == 'true' || steps.fltr.outputs.lockfile == 'true'
      run: nix build .#shpool

    - name: build stash
      if: steps.fltr.outputs.lockfile == 'true'
      run: nix build .#stash

    - name: build Seraphine's caddy package
      if: steps.fltr.outputs.caddy == 'true' || steps.fltr.outputs.lockfile == 'true'
      run: nix build .#nixosConfigurations.Seraphine.config.services.caddy.package
