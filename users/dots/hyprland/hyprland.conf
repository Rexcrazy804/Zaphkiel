source = hyprcolors.conf
monitor = eDP-1, preferred, auto, 1.25
monitor = , preferred, auto, 1, mirror, eDP-1
$terminal = footclient
$fileManager = $terminal -e yazi
$menu = TERMINAL=$terminal fuzzel

# gtk stuff
exec-once = dconf write /org/gnome/desktop/interface/cursor-theme "'Kokomi_Cursor'"
exec-once = dconf write /org/gnome/desktop/interface/gtk-theme "'rose-pine'"
exec-once = dconf write /org/gnome/desktop/interface/icon-theme "'rose-pine'"
exec-once = dconf write /org/gnome/desktop/interface/document-font-name "'CaskaydiaCove Nerd Font'"
exec-once = dconf write /org/gnome/desktop/interface/font-name "'CaskaydiaCove Nerd Font'"
exec-once = dconf write /org/gnome/desktop/interface/monospace-font-name "'CaskaydiaMono Nerd font'"
exec-once = dconf write /org/gnome/desktop/interface/accent-color "'purple'"

# Auto
exec-once = uwsm app -t service quickshell -- --log-rules 'quickshell.dbus.properties.warning = false'
exec-once = uwsm app -t service swww-daemon
exec-once = uwsm app -t service foot -- --server
exec-once = uwsm app -t service kdeconnectd
exec-once = uwsm app -t service wl-paste -- --watch cliphist store
exec-once = uwsm app kdeconnect-indicator
exec-once = uwsm app nm-applet

exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = nu -c '^date +%H | into int | if ($in > 17 or $in < 7) { systemctl --user start hyprsunset.service }'

general {
  gaps_in = 4
  gaps_out = 8
  border_size = 2
  col.active_border = $primary
  col.inactive_border = $primary_container
  resize_on_border = false
  allow_tearing = false
  layout = dwindle
}

# fix pixelation on HiDPI
xwayland {
  force_zero_scaling = true
}

group {
  col.border_active = $tertiary
  col.border_inactive = $tertiary_container
  drag_into_group = 2

  groupbar {
    font_family = CaskaydiaMono Nerd font
    font_size = 12
    height = 16
    text_color = $on_tertiary_container
    col.active = $tertiary
    col.inactive = $tertiary_container
    col.locked_active = $secondary
    col.locked_inactive = $secondary_container
  }
}

decoration {
  rounding = 0
  rounding_power = 2
  active_opacity = 1.0
  inactive_opacity = 1.0

  shadow {
    enabled = false
    range = 4
    render_power = 3
    color = $shadow
  }

  blur {
    enabled = false
    size = 1
    passes = 1
    vibrancy = 0.1
  }
}

animations {
  enabled = yes, please :)
  bezier = easeOutQuint,0.23,1,0.32,1
  bezier = easeInOutCubic,0.65,0.05,0.36,1
  bezier = linear,0,0,1,1
  bezier = almostLinear,0.5,0.5,0.75,1.0
  bezier = quick,0.15,0,0.1,1

  animation = global, 1, 10, default
  animation = border, 1, 5.39, easeOutQuint
  animation = windows, 1, 4.79, easeOutQuint
  animation = windowsIn, 1, 4.1, easeOutQuint, popin 87%
  animation = windowsOut, 1, 1.49, linear, popin 87%
  animation = fadeIn, 1, 1.73, almostLinear
  animation = fadeOut, 1, 1.46, almostLinear
  animation = fade, 1, 3.03, quick
  animation = layers, 1, 3.81, easeOutQuint
  animation = layersIn, 1, 4, easeOutQuint, fade
  animation = layersOut, 1, 1.5, linear, fade
  animation = fadeLayersIn, 1, 1.79, almostLinear
  animation = fadeLayersOut, 1, 1.39, almostLinear
  animation = workspaces, 1, 1.94, almostLinear, fade
  animation = workspacesIn, 1, 1.94, almostLinear, fade
  animation = workspacesOut, 1, 1.94, almostLinear, fade
}

# smart gaps
workspace = w[tv1], gapsout:0, gapsin:0
workspace = f[1], gapsout:0, gapsin:0
windowrulev2 = bordersize 0, floating:0, onworkspace:w[tv1]
windowrulev2 = rounding 0, floating:0, onworkspace:w[tv1]
windowrulev2 = bordersize 0, floating:0, onworkspace:f[1]
windowrulev2 = rounding 0, floating:0, onworkspace:f[1]

dwindle {
  pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
  preserve_split = true # You probably want this
}

master {
  new_status = master
}

misc {
  force_default_wallpaper = 1 # Set to 0 or 1 to disable the anime mascot wallpapers
  disable_hyprland_logo = true # If true disables the random hyprland logo / anime girl background. :(
  vrr = true
}

# Input
input {
  kb_layout = us
  kb_variant =
  kb_model =
  kb_options =
  kb_rules =

  follow_mouse = 1

  sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

  touchpad {
    natural_scroll = true
    middle_button_emulation = true
  }
}

gestures {
  workspace_swipe = true
}

# Keybindings
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod SHIFT, Q, killactive,
bind = $mainMod SHIFT CTRL, Q, forcekillactive,
bind = $mainMod SHIFT CTRL, E, exec, uwsm stop
bind = $mainMod SHIFT, E, exec, hyprlock
bind = $mainMod, N, togglegroup,
bind = $mainMod SHIFT, F, togglefloating,
bind = $mainMod SHIFT, P, pin,
bind = $mainMod SHIFT, V, togglesplit,
bind = $mainMod, F, fullscreenstate, 2 1
bind = ALT, TAB, cyclenext,

# Applications 
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod SHIFT, RETURN, exec, $fileManager
bind = $mainMod SHIFT, S, exec, wayfreeze --hide-cursor & PID=$!; sleep .1; grim -g "$(slurp)" - | wl-copy; kill $PID
bind = $mainMod CTRL SHIFT, S, exec, grim - | wl-copy | notify-send -i nix-snowflake-white "Screenshot taken" "Grim has screenshotted the full screen"
bind = , Print, exec, wayfreeze --hide-cursor & PID=$!; sleep .1; grim -g "$(slurp)" /tmp/screenshot.png; kill $PID ; swappy -f /tmp/screenshot.png
bind = $mainMod, M, exec, eww open --toggle win0
bind = $mainMod SHIFT, R, exec, qs ipc call record start
bind = $mainMod, R, exec, qs ipc call record startArea "$(slurp)"
bind = $mainMod CTRL SHIFT, R, exec, gpurecording stop
bind = $mainMod, SPACE, exec, $menu
bind = $mainMod, V, exec, cliphist list | $menu --dmenu | cliphist decode | wl-copy
bind = $mainMod SHIFT, space, exec, nu -c 'cat $nu.history-path | split row "\n" | uniq | str join "\n" | fuzzel --dmenu | nu -c $"($in)"'
bind = $mainMod, B, exec, nu -c 'systemctl --user is-active hyprsunset | if $in == inactive { systemctl --user start hyprsunset } else { systemctl --user stop hyprsunset }'

# Move focus with mainMod + hjkl (fuck arrow keys)
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d
# Move window
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d
# Window into groups
bind = $mainMod CTRL, H, moveintogroup, l
bind = $mainMod CTRL, L, moveintogroup, r
bind = $mainMod CTRL, K, moveintogroup, u
bind = $mainMod CTRL, J, moveintogroup, d
# Window outof groups
bind = $mainMod SHIFT CTRL, H, moveoutofgroup, l
bind = $mainMod SHIFT CTRL, L, moveoutofgroup, r
bind = $mainMod SHIFT CTRL, K, moveoutofgroup, u
bind = $mainMod SHIFT CTRL, J, moveoutofgroup, d
# Switch Window in group
bind = $mainMod, TAB, changegroupactive, f
bind = $mainMod SHIFT, TAB, changegroupactive, b

# Special Workspace
bind = $mainMod, U, togglespecialworkspace, aqua
bind = $mainMod, I, togglespecialworkspace, ruby
bind = $mainMod, O, togglespecialworkspace, ai
# Switch workspaces with mainMod + 123qweasd
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, Q, workspace, 4
bind = $mainMod, W, workspace, 5
bind = $mainMod, E, workspace, 6
bind = $mainMod, A, workspace, 7
bind = $mainMod, S, workspace, 8
bind = $mainMod, D, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + 123qweasd
bind = $mainMod ALT, 1, movetoworkspace, 1
bind = $mainMod ALT, 2, movetoworkspace, 2
bind = $mainMod ALT, 3, movetoworkspace, 3
bind = $mainMod ALT, Q, movetoworkspace, 4
bind = $mainMod ALT, W, movetoworkspace, 5
bind = $mainMod ALT, E, movetoworkspace, 6
bind = $mainMod ALT, A, movetoworkspace, 7
bind = $mainMod ALT, S, movetoworkspace, 8
bind = $mainMod ALT, D, movetoworkspace, 9
bind = $mainMod ALT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
#bind = $mainMod, S, togglespecialworkspace, magic
#bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# lid switch
bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1,preferred,auto,auto"
bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor "eDP-1, disable"

##############################
### WINDOWS AND WORKSPACES ###
##############################

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule v1
# windowrule = float, ^(kitty)$

# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

# dragon pin
windowrulev2 = pin, class:(it.catboy.ripdrag)
windowrulev2 = move 20 50, class:(it.catboy.ripdrag)
# Fix some dragging issues with XWayland
windowrulev2 = nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0
